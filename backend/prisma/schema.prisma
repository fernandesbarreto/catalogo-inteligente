// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  roles     UserRole[]
  createdAt DateTime @default(now())
}

model Role {
  id    String  @id @default(cuid())
  name  String  @unique
  users UserRole[]
  @@map("roles")
}

model UserRole {
  userId String
  roleId String
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
  @@id([userId, roleId])
  @@map("user_roles")
}

model Paint {
  id          String   @id @default(cuid())
  name        String
  color       String
  colorHex    String   @map("color_hex")
  surfaceType String   @map("surface_type")
  roomType    String   @map("room_type")
  finish      String
  features    String?
  line        String?
  embedding   Unsupported("vector(1536)")?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt      @map("updated_at")

  @@map("paints")
}

