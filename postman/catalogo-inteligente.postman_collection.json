{
  "info": {
    "name": "Catalogo Inteligente - API (Users & Paints)",
    "_postman_id": "b4f9d3b8-8c24-4d3d-8c1a-1234567890ab",
    "description": "Endpoints de health, users e paints com testes b\u00e1sicos.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "http://localhost:3000/health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/health",
              "host": ["http://localhost:3000"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('JSON ok:true', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('ok', true);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Body is array', () => Array.isArray(pm.response.json()));"
                ]
              }
            }
          ]
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"postman_user+{{timestamp}}@example.com\", \"password\": \"secret123\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": ["pm.variables.set('timestamp', Date.now());"]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201', () => pm.response.to.have.status(201));",
                  "const json = pm.response.json();",
                  "pm.test('Has id & email', () => { pm.expect(json).to.have.property('id'); pm.expect(json).to.have.property('email'); });",
                  "pm.collectionVariables.set('userId', json.id);",
                  "pm.collectionVariables.set('userEmail', json.email);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.request.url.variables.add({key: 'id', value: pm.collectionVariables.get('userId')});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"password\": \"newpass123\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.request.url.variables.add({key: 'id', value: pm.collectionVariables.get('userId')});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.request.url.variables.add({key: 'id', value: pm.collectionVariables.get('userId')});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 204', () => pm.response.to.have.status(204));"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Paints",
      "item": [
        {
          "name": "List Paints",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/paints",
              "host": ["{{baseUrl}}"],
              "path": ["paints"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));",
                  "pm.test('Body is array', () => Array.isArray(pm.response.json()));"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Paint",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Snow White\", \"color\": \"#FFFFFF\", \"surfaceType\": \"indoor\", \"roomType\": \"bedroom\", \"finish\": \"matte\", \"features\": \"washable, anti-mold\", \"line\": \"Silk Touch\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/paints",
              "host": ["{{baseUrl}}"],
              "path": ["paints"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201', () => pm.response.to.have.status(201));",
                  "const json = pm.response.json();",
                  "pm.collectionVariables.set('paintId', json.id);",
                  "pm.test('Has id & name', () => { pm.expect(json).to.have.property('id'); pm.expect(json).to.have.property('name'); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Paint by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/paints/:id",
              "host": ["{{baseUrl}}"],
              "path": ["paints", ":id"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.request.url.variables.add({key: 'id', value: pm.collectionVariables.get('paintId')});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Paint",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"color\": \"#FAFAFA\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/paints/:id",
              "host": ["{{baseUrl}}"],
              "path": ["paints", ":id"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.request.url.variables.add({key: 'id', value: pm.collectionVariables.get('paintId')});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', () => pm.response.to.have.status(200));"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Paint",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/paints/:id",
              "host": ["{{baseUrl}}"],
              "path": ["paints", ":id"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.request.url.variables.add({key: 'id', value: pm.collectionVariables.get('paintId')});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 204', () => pm.response.to.have.status(204));"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/bff"
    }
  ]
}
